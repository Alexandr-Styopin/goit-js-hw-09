{"mappings":"YAqBA,IAAMA,EAAO,CACTC,KAAMC,SAASC,cAAc,UAI3BC,EAAoB,CACxBC,UAAU,EACVC,WAAY,KAEZC,KAAA,W,WAEE,IAAGC,KAAKH,SAAR,CAIAG,KAAKH,UAAW,EAEhB,IAAMI,EAAST,EAAKC,KAAKS,SACnBC,EAAmBC,OAAOH,EAAOI,OAAOC,OACxCC,EAAkBH,OAAOH,EAAOO,MAAMF,OACtCG,EAAiBL,OAAOH,EAAOS,KAAKJ,OAEtCK,EAAW,KAEXC,EAAQL,EAENT,EAAae,aAAY,WA/CnC,IAAuBC,EAAUN,EAgDrBG,IACNC,GAASH,IAjDQK,EAoDnBH,GAAY,EApDiBH,EAsDLI,EArDnBG,QAAU,IAAIC,SAAQ,SAACC,EAASC,GACrC,IAAMC,EAAgBC,KAAKC,SAAW,GAEhCC,EAAS,CACbR,SAAUA,EACVN,MAAOA,GAGT,OAAIW,EAEKF,EAAQK,GAIRJ,EAAOI,E,KAwCfC,MAAK,SAAAC,G,IAAGV,EAAQU,EAARV,SAAUN,EAAKgB,EAALhB,MACnBiB,QAAQC,IAAI,uBAAwCC,OAAfb,EAAS,QAAYa,OAANnB,EAAM,M,IAEzDoB,OAAM,SAAAJ,G,IAAGV,EAAQU,EAARV,SAAUN,EAAKgB,EAALhB,MACpBiB,QAAQC,IAAI,sBAAqCC,OAAfb,EAAS,QAAYa,OAANnB,EAAM,M,IAGjDG,IAAaR,IACb0B,aAAa/B,GACbgC,EAAKjC,UAAW,E,GAEpBe,EAjCA,C,GAqCNpB,EAAKC,KAAKsC,iBAAiB,UAE3B,SAAsBC,GAClBA,EAAIC,iBAEJrC,EAAkBG,M","sources":["src/js/03-promises.js"],"sourcesContent":["function createPromise(position, delay) {\n  return promise = new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n\n    const values = {\n      position: position,\n      delay: delay,\n    };\n  \n    if (shouldResolve) {\n      // Fulfill\n      return resolve(values);\n\n    } else {\n      // Reject\n      return reject(values);\n    }\n  });\n};\n\n\nconst refs = {\n    form: document.querySelector('.form'),\n    \n};\n\nconst callCreatePromise = {\n  isActive: false,\n  intervalId: null,\n\n  call() {\n\n    if(this.isActive) {\n      return;\n  };\n\n    this.isActive = true;\n\n    const formEl = refs.form.elements;\n    const amountInputValue = Number(formEl.amount.value);\n    const delayInputValue = Number(formEl.delay.value);\n    const stepInputValue = Number(formEl.step.value);\n\n    let position = null;\n    \n    let delay = delayInputValue; \n        \n    const intervalId = setInterval(() => { \n        if (position) {\n      delay += stepInputValue;\n    }\n\n    position += 1;\n   \n    createPromise(position, delay)\n    .then(({ position, delay }) => {\n    console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  })\n    .catch(({ position, delay }) => {\n    console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n  });\n\n      if (position === amountInputValue) {     \n          clearTimeout(intervalId);\n          this.isActive = false;\n      };\n    },delay);\n  }\n};\n\nrefs.form.addEventListener('submit', onFormSubmit);\n\nfunction onFormSubmit(evt) {\n    evt.preventDefault();\n  \n    callCreatePromise.call();\n};"],"names":["$ce04d3a99e08e73b$var$refs","form","document","querySelector","$ce04d3a99e08e73b$var$callCreatePromise","isActive","intervalId","call","this","formEl","elements","amountInputValue","Number","amount","value","delayInputValue","delay","stepInputValue","step","position1","delay1","setInterval","position","promise","Promise","resolve","reject","shouldResolve","Math","random","values","then","param","console","log","concat","catch","clearTimeout","_this","addEventListener","evt","preventDefault"],"version":3,"file":"03-promises.a40c3011.js.map"}